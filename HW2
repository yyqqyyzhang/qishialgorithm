// Q1
class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int curColor=image[sr][sc];
        int nrow=image.size();
        int ncol=image[0].size();
        queue<vector<int>> q;
        q.push(vector<int> {sr, sc});
        int len, row, col;
        if (curColor!=newColor) {
            while (!q.empty()) {
                len=q.size();
                for (int i=0; i<len; i++) {
                    auto temp = q.front();
                    q.pop();
                    row=temp[0];
                    col=temp[1];
                    //if (image[row][col]==curColor) {
                    image[row][col]=newColor;
                    if (col-1>=0 && image[row][col-1]==curColor) q.push(vector<int> {row, col-1});
                    if (col+1<ncol && image[row][col+1]==curColor) q.push(vector<int> {row, col+1});
                    if (row-1>=0 && image[row-1][col]==curColor) q.push(vector<int> {row-1, col});
                    if (row+1<nrow && image[row+1][col]==curColor) q.push(vector<int> {row+1, col});
                    //}
                }
            }
        }
        
        return image;
    }
};



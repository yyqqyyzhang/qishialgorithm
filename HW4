// Q1
class Solution {
public:
    vector<string> letterCombinations(string digits) {
        vector<vector<char>> table(2);
        table.push_back({'a', 'b', 'c'});
        table.push_back({'d', 'e', 'f'});
        table.push_back({'g', 'h', 'i'});
        table.push_back({'j', 'k', 'l'});
        table.push_back({'m', 'n', 'o'});
        table.push_back({'p', 'q', 'r', 's'});
        table.push_back({'t', 'u', 'v'});
        table.push_back({'w', 'x', 'y', 'z'});
        
        vector<string> res;
        
        if (digits.size()==0) return res;
        
        string temp;
        helper(digits, table, temp, res);
        return res;
    }
    void helper(string digits, vector<vector<char>> table, string& temp, vector<string>& res) {
        if (temp.size()==digits.size()) {
            res.push_back(temp);
            return;
        }
        
        int index=temp.size();
        
        for (int i=0; i<table[digits[index]-'0'].size(); i++) {
            temp.push_back(table[digits[index]-'0'][i]);
            helper(digits, table, temp, res);
            temp.pop_back();
        }
    }
};

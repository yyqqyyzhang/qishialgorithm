//LeetCode Q53
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int result=nums[0];
        int end=nums[0];
        for(int i=1; i<nums.size(); i++) {
            end=max(0, end)+nums[i];
            if (end>result) {
                result=end;
            }
        }
        return result;
    }
    int max(int a, int b){
        if (a>=b) return a;
        else return b;
    }
};


//LeetCode Q169
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int result=nums[0], count=1;
        for (int i=1; i<nums.size(); i++) {
            if (nums[i]==result) count+=1;
            else count-=1;
            if (count==0) {
                result=nums[i];
                count=1;
            }
        }
        return result;
    }
};

